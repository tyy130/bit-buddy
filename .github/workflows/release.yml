name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Build for release (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller

      - name: Build (PyInstaller)
        shell: bash
        run: |
          pyinstaller build/config/buddy.spec --clean

      - name: Package macOS .app
        if: runner.os == 'macOS'
        shell: bash
        run: |
          cd dist
          if [ -d "BitBuddy.app" ]; then zip -r BitBuddy-macOS.zip BitBuddy.app; fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bit-buddy-${{ runner.os }}
          path: |
            dist/**

      - name: Install Inno Setup (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install innosetup -y

      - name: Build Windows installer
        if: runner.os == 'Windows'
        shell: bash
        run: |
          ISCC.exe build/config/BitBuddyInstaller.iss
        continue-on-error: true

      - name: Upload installer artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: bit-buddy-windows-installer
          path: |
            dist/**/*.exe
            build/installer/**/*.exe

  release:
    name: Create GitHub Release and Upload Assets
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
